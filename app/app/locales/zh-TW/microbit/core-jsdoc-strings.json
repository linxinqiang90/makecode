{
  "AcceleratorRange.EightG": "加速器會測量高達 8G 的力",
  "AcceleratorRange.FourG": "加速器會測量高達 4G 的力",
  "AcceleratorRange.OneG": "加速器會測量高達 1G 的力",
  "AcceleratorRange.TwoG": "加速器會測量高達 2G 的力",
  "Array": "在清單中新增、移除及取代物品。\n\n在清單中新增、移除及取代物品。",
  "Array.every": "",
  "Array.every|param|callbackfn": "",
  "Array.filter": "傳回符合回呼函數指定條件的陣列之元素。",
  "Array.filter|param|callbackfn": "接收最多兩個引數的函數。對於陣列中的各個元素，篩選方法會呼叫 callbackfn 函數一次。",
  "Array.forEach": "",
  "Array.forEach|param|callbackfn": "",
  "Array.get": "",
  "Array.get|param|index": "項目在清單中的位置 (從零開始)，例如：0",
  "Array.indexOf": "傳回陣列中某值第一次出現的索引。",
  "Array.indexOf|param|fromIndex": "要開始搜尋的陣列索引。若忽略 fromIndex，搜尋會從索引 0 開始。",
  "Array.indexOf|param|item": "要在陣列中找出的值。",
  "Array.insertAt": "",
  "Array.insertAt|param|index": "要在清單中插入值的位置 (從零開始)，例如：0",
  "Array.join": "",
  "Array.join|param|sep": "字串分隔符號",
  "Array.length": "",
  "Array.map": "在陣列中的各元素上呼叫定義的回呼函數，傳回包含結果的陣列。",
  "Array.map|param|callbackfn": "接收最多兩個引數的函數。對於陣列中的各個元素，對應方法會呼叫 callbackfn 函數一次。",
  "Array.pop": "從陣列中移除最後元素並傳回該元素。",
  "Array.push": "",
  "Array.reduce": "對陣列中的所有元素，呼叫指定的回呼函數。回呼函數傳回的值是累積的結果，會以引數形式提供於對回呼函數的下次呼叫中。",
  "Array.reduce|param|callbackfn": "接收最多三個引數的函數。對於陣列中的各個元素，減少方法會呼叫 callbackfn 函數一次。",
  "Array.reduce|param|initialValue": "要開始累積的初始值。對 callbackfn 函數的首次呼叫以引數形式提供了這個值，而不是以陣列值形式。",
  "Array.removeAt": "移除位於特定索引的元素。",
  "Array.removeElement": "",
  "Array.reverse": "反轉陣列中的元素。第一個陣列元素會成為最後一個，最後一個陣列元素會成為第一個。",
  "Array.set": "",
  "Array.set|param|index": "要在清單中儲存值的位置 (從零開始)，例如：0",
  "Array.shift": "移除陣列中的第一個元素並傳回該元素。這個方法會改變陣列的長度。",
  "Array.slice": "傳回陣列的一節。",
  "Array.slice|param|end": "陣列指定部份的結尾。例如：0",
  "Array.slice|param|start": "陣列指定部份的開始。例如：0",
  "Array.some": "",
  "Array.some|param|callbackfn": "",
  "Array.sort": "排序陣列中的元素並傳回陣列。排序不一定要穩定。",
  "Array.splice": "從陣列中移除元素。",
  "Array.splice|param|deleteCount": "要移除的元素數。例如：0",
  "Array.splice|param|start": "要從陣列中開始移除元素的位置 (從零開始)。例如：0",
  "Array.unshift": "在陣列起點新增一個元素，傳回陣列的新長度。",
  "Boolean.toString": "傳回代表某物件的一個字串。",
  "Buffer.fill": "以指定的值填入一段或一整個緩衝（buffer）。",
  "Buffer.getNumber": "從緩衝讀取指定格式的數字。",
  "Buffer.length": "傳回緩衝物件的長度。",
  "Buffer.rotate": "",
  "Buffer.rotate|param|length": "",
  "Buffer.rotate|param|offset": "要移位的位元組號碼；使用負值以向右移位",
  "Buffer.rotate|param|start": "緩衝中的起點偏移。預設為 0。",
  "Buffer.setNumber": "將指定格式的數字寫入緩衝。",
  "Buffer.shift": "",
  "Buffer.shift|param|length": "",
  "Buffer.shift|param|offset": "要移位的位元組號碼；使用負值以向右移位",
  "Buffer.shift|param|start": "緩衝中的起點偏移。預設為 0。",
  "Buffer.slice": "傳回緩衝片段的副本。",
  "Buffer.toHex": "",
  "Buffer.write": "在目前緩衝中的「dstOffset」寫入「src」的內容。",
  "EventCreationMode": "如何建立事件。",
  "EventCreationMode.CreateAndFire": "MicroBitEvent 已初始化，其事件處理常式會立即觸發 (不適合用於插斷！)。",
  "EventCreationMode.CreateOnly": "MicroBitEvent 已初始化，未發生進一步處理。",
  "Gesture.EightG": "偵測到 8G 振動時引發",
  "Gesture.FreeFall": "當主控板向下掉落時觸發！",
  "Gesture.LogoDown": "標誌朝下且螢幕垂直時引發",
  "Gesture.LogoUp": "標誌朝上且螢幕垂直時引發",
  "Gesture.ScreenDown": "螢幕朝上且板子呈水平時引發",
  "Gesture.ScreenUp": "螢幕朝下且板子呈水平時引發",
  "Gesture.Shake": "振動時引發",
  "Gesture.SixG": "偵測到 6G 振動時引發",
  "Gesture.ThreeG": "偵測到 3G 振動時引發",
  "Gesture.TiltLeft": "螢幕朝左時引發",
  "Gesture.TiltRight": "螢幕朝右時引發",
  "Image.clear": "將所有像素設為關。",
  "Image.height": "取得以列為單位的高度 (一律是 5)",
  "Image.pixel": "取得像素點的位置，格式為 (x,y)。",
  "Image.pixelBrightness": "取得特定位置的像素亮度 ([0..255])",
  "Image.pixel|param|x": "TODO",
  "Image.pixel|param|y": "TODO",
  "Image.plotFrame": "在螢幕上繪製出索引（index）的欄位圖框。",
  "Image.plotFrame|param|xOffset": "要顯示的圖像的欄位索引",
  "Image.plotImage": "在指定的螢幕欄位繪製出圖像。",
  "Image.scrollImage": "捲動影像。",
  "Image.scrollImage|param|frameOffset": "每次動畫水平位移的值，例如 1、2、5",
  "Image.scrollImage|param|interval": "各動畫步驟之間的毫秒數，如 200",
  "Image.setPixel": "設定位置的像素狀態「(x,y)」",
  "Image.setPixelBrightness": "設定指定位置的像素亮度",
  "Image.setPixel|param|value": "TODO",
  "Image.setPixel|param|x": "TODO",
  "Image.setPixel|param|y": "TODO",
  "Image.showFrame": "顯示影像線條的特定畫格。",
  "Image.showFrame|param|frame": "TODO",
  "Image.showImage": "顯示影像自「x offset」偏移起的特定畫格。",
  "Image.showImage|param|xOffset": "要顯示的圖像的欄位索引",
  "Image.width": "取得欄寬度",
  "Math": "更多含數字的複雜操作。",
  "Math.abs": "傳回數字的絕對值 (沒有正負號的數值)。\n例如，-5 的絕對值等於 5 的絕對值。",
  "Math.abs|param|x": "",
  "Math.acos": "傳回數字的反餘弦 (以弧度為單位)",
  "Math.acos|param|x": "一個數字",
  "Math.asin": "傳回數字的反正弦 (以弧度為單位)",
  "Math.asin|param|x": "一個數字",
  "Math.atan": "傳回某數字的反正切值 (使用度數)。",
  "Math.atan2": "傳回其引數的商之反正切值。",
  "Math.atan2|param|x": "一個數字",
  "Math.atan2|param|y": "一個數字",
  "Math.atan|param|x": "一個數字",
  "Math.ceil": "傳回大於或等於其數值引數的最小數字。",
  "Math.ceil|param|x": "",
  "Math.constrain": "",
  "Math.cos": "傳回某數字的餘弦。",
  "Math.cos|param|x": "單位為度數的角度",
  "Math.exp": "傳回「e^x」。",
  "Math.exp|param|x": "一個數字",
  "Math.floor": "傳回小於或等於其數值引數的最大數字。",
  "Math.floor|param|x": "數值運算式。",
  "Math.icos": "",
  "Math.icos|param|theta": "輸入角度，範圍為 0 到 255",
  "Math.idiv": "傳回兩個數字相除後帶正負號的 32 位元整數。",
  "Math.idiv|param|x": "第一個數字",
  "Math.idiv|param|y": "第二個數字",
  "Math.imul": "傳回兩個數字相乘後帶正負號的 32 位元整數。",
  "Math.imul|param|x": "第一個數字",
  "Math.imul|param|y": "第二個數字",
  "Math.isin": "",
  "Math.isin|param|theta": "輸入角度，範圍為 0 到 255",
  "Math.log": "傳回某數字的自然對數 (以 e 為底數)。",
  "Math.log|param|x": "一個數字",
  "Math.map": "將某數字從某範圍重新對應到另一個範圍。也就是「from low」的值會對應到「to low」，「from high」的值會對應到「to high」，介於其中的值會對應到介於其中的值等等。",
  "Math.map|param|fromHigh": "值目前範圍的上限，例如：1023",
  "Math.map|param|fromLow": "值目前範圍的下限",
  "Math.map|param|toHigh": "值目標範圍的上限，例如：4",
  "Math.map|param|toLow": "值目標範圍的下限",
  "Math.map|param|value": "要在範圍內對應的值",
  "Math.max": "",
  "Math.min": "",
  "Math.pow": "",
  "Math.pow|param|x": "",
  "Math.pow|param|y": "",
  "Math.random": "",
  "Math.randomBoolean": "隨機產生布林值，不是 true 就是 false，就像擲銅版，不是正面就是反面（中間的或然率是 0 啊！）。",
  "Math.randomRange": "傳回最小值及最大值之間的隨機整數。如果最小值小於最大值，範圍將自動反轉。",
  "Math.randomRange|param|max": "範圍的上限值，如：10",
  "Math.randomRange|param|min": "範圍的下限值，如：-10",
  "Math.round": "傳回提供的數值運算式所四捨五入到最接近的數字。",
  "Math.roundWithPrecision": "",
  "Math.roundWithPrecision|param|digits": "",
  "Math.roundWithPrecision|param|x": "",
  "Math.round|param|x": "要四捨五入到最接近數字的值。",
  "Math.sign": "",
  "Math.sign|param|x": "",
  "Math.sin": "傳回某數字的正弦。",
  "Math.sin|param|x": "單位為度數的角度",
  "Math.sqrt": "",
  "Math.sqrt|param|x": "",
  "Math.tan": "傳回某數字的正切。",
  "Math.tan|param|x": "單位為度數的角度",
  "Math.trunc": "傳回去掉所有小數位數後的數字。",
  "Math.trunc|param|x": "",
  "Number.toString": "",
  "String": "合併、分割與搜尋文字字串。\n\n合併、分割與搜尋文字字串。",
  "String.charAt": "傳回位於指定索引的字元。",
  "String.charAt|param|index": "",
  "String.charCodeAt": "傳回指定位置的字元之 Unicode 值。",
  "String.charCodeAt|param|index": "",
  "String.compare": "查看兩字串 (ASCII 編碼) 中的字元順序。",
  "String.compare|param|that": "",
  "String.concat": "",
  "String.concat|param|other": "",
  "String.fromCharCode": "從 ASCII 字符集中取字，例如 77 表示 M、109 表示 m。範圍為 0 至 127（25 以下是空值）。",
  "String.includes": "",
  "String.includes|param|searchValue": "",
  "String.includes|param|start": "",
  "String.indexOf": "",
  "String.indexOf|param|searchValue": "",
  "String.indexOf|param|start": "",
  "String.isEmpty": "",
  "String.length": "",
  "String.substr": "傳回目前字串的子字串。",
  "String.substr|param|length": "",
  "String.substr|param|start": "",
  "basic": "提供了一些能在 micro:bit 上存取的基本功能。",
  "basic.clearScreen": "清除 LED 屏幕上顯示的數字、文字等訊息，相當於關閉所有的指示燈。",
  "basic.forever": "不斷的執行包含在裡頭的程式。",
  "basic.pause": "暫停所指定的一段時間，單位為 ms（毫秒，1秒 = 1000 毫秒）",
  "basic.pause|param|ms": "暫停的長度，例如：100、200、500、1000、2000",
  "basic.plotLeds": "在屏幕上亮起指定位置的 led，可以用來繪製出圖像。",
  "basic.plotLeds|param|leds": "LED 開關的模式",
  "basic.showAnimation": "以動畫方式顯示一連串的 LED 畫面。",
  "basic.showAnimation|param|interval": "每次重新繪圖之間的毫秒數",
  "basic.showAnimation|param|leds": "LED 開關的模式",
  "basic.showArrow": "",
  "basic.showArrow|param|direction": "箭頭的方向",
  "basic.showArrow|param|interval": "顯示圖示的時間長度 (毫秒)。預設值為 600。",
  "basic.showIcon": "在 LED 屏幕上繪製出所選擇的圖示。",
  "basic.showIcon|param|icon": "預先定義的圖示 id",
  "basic.showIcon|param|interval": "顯示圖示的時間長度 (毫秒)。預設值為 600。",
  "basic.showLeds": "在屏幕上亮起指定位置的 led，可以用來繪製出圖像。",
  "basic.showLeds|param|interval": "繪圖後暫停的毫秒數",
  "basic.showLeds|param|leds": "LED 開關的模式",
  "basic.showNumber": "在屏幕上顯示一個數字。如果數字不能一次顯示在屏幕上，則用跑馬燈樣式輸出。",
  "basic.showNumber|param|interval": "捲動速度；例如：150、100、200、-100",
  "basic.showString": "在螢幕上顯示英文，若是一個字母以上（像單字或句子），會以跑馬燈的樣式輸出。",
  "basic.showString|param|interval": "how fast to shift characters; eg: 150, 100, 200, -100",
  "basic.showString|param|text": "在螢幕上捲動的文字，例如：「Hello!」",
  "console": "",
  "console.addListener": "",
  "console.log": "",
  "console.logValue": "",
  "console.logValue|param|name": "",
  "console.logValue|param|value": "要寫入的值",
  "control": "執行階段和事件公用程式。",
  "control.assert": "",
  "control.createBuffer": "",
  "control.createBuffer|param|size": "",
  "control.deviceName": "",
  "control.deviceSerialNumber": "從內部資料中獲取獨特、唯一的號碼，這稱為序號。",
  "control.eventSourceId": "",
  "control.eventTimestamp": "取得匯流排中最後一個事件執行的時間。",
  "control.eventValue": "取得匯流排最後一個事件的值。",
  "control.eventValueId": "",
  "control.inBackground": "將指定的程式在背景運行。",
  "control.onEvent": "",
  "control.panic": "",
  "control.raiseEvent": "在事件匯流排中引發一個事件。",
  "control.raiseEvent|param|mode": "",
  "control.raiseEvent|param|src": "",
  "control.raiseEvent|param|value": "",
  "control.reset": "將 BBC micro:bit 重置。",
  "control.runtimeWarning": "在模擬器中顯示警告訊息。",
  "control.waitMicros": "暫定訊號輸出，可以指定時間，單位為 µs（微秒，1 毫秒 = 1000 微秒）",
  "control.waitMicros|param|micros": "要等待的微秒數。例如：4",
  "game": "一個單顆 LED 角色的遊戲引擎",
  "game.LedSprite": "一個遊戲角色，輸出成一顆指示燈。",
  "game.LedSprite.blink": "回報角色閃爍（blink）的持續時間",
  "game.LedSprite.brightness": "回報角色在螢幕上的亮度（brightness）",
  "game.LedSprite.change": "改變角色的屬性",
  "game.LedSprite.changeBlinkBy": "增加或減少 ``blink`` 的值以改變閃爍的持續時間",
  "game.LedSprite.changeBlinkBy|param|ms": "TODO",
  "game.LedSprite.changeBrightnessBy": "增加或減少 ``y`` 的值以改變 Y 位置",
  "game.LedSprite.changeBrightnessBy|param|value": "要變更亮度的值",
  "game.LedSprite.changeDirectionBy": "增加或減少 ``direction`` 以改變向右轉的程度",
  "game.LedSprite.changeDirectionBy|param|angle": "TODO",
  "game.LedSprite.changeXBy": "增加或減少  ``x`` 的值以改變 X 位置。",
  "game.LedSprite.changeXBy|param|x": "TODO",
  "game.LedSprite.changeYBy": "增加或減少 ``y`` 的值以改變 Y 位置",
  "game.LedSprite.changeYBy|param|y": "TODO",
  "game.LedSprite.change|param|property": "要變更的特性名稱",
  "game.LedSprite.change|param|value": "要改變（增加或減少）的量，例如：1",
  "game.LedSprite.delete": "從遊戲引擎中刪除這個角色，這個角色將不會再出現在螢幕，也不會再與其它角色互動。",
  "game.LedSprite.direction": "回報角色當前的方向",
  "game.LedSprite.get": "取得角色的屬性",
  "game.LedSprite.get|param|property": "要變更的特性名稱",
  "game.LedSprite.goTo": "在螢幕上前往這個位置",
  "game.LedSprite.goTo|param|x": "TODO",
  "game.LedSprite.goTo|param|y": "TODO",
  "game.LedSprite.ifOnEdgeBounce": "若觸碰到螢幕邊緣並朝向舞台，則轉向。",
  "game.LedSprite.isTouching": "若角色位置與指定的角色相同，則回報 true",
  "game.LedSprite.isTouchingEdge": "若角色觸碰到邊緣，則回報 true",
  "game.LedSprite.isTouching|param|other": "TODO",
  "game.LedSprite.move": "在目前方向移動特定數量的 LED",
  "game.LedSprite.move|param|leds": "要移動的 LED 數，例如：1、-1",
  "game.LedSprite.off": "關閉角色（預設為開啟）",
  "game.LedSprite.on": "開啟角色（預設為開啟）",
  "game.LedSprite.set": "設定原件特性",
  "game.LedSprite.setBlink": "設定閃爍時間毫秒數。",
  "game.LedSprite.setBlink|param|ms": "TODO",
  "game.LedSprite.setBrightness": "設定原件「亮度」",
  "game.LedSprite.setBrightness|param|brightness": "亮度值，範圍為 0（關閉）到 255（最亮）",
  "game.LedSprite.setDirection": "設定目前原件的方向，四捨五入到最接近的 45 倍數",
  "game.LedSprite.setDirection|param|degrees": "TODO",
  "game.LedSprite.setX": "設定原件的「x」位置",
  "game.LedSprite.setX|param|x": "TODO",
  "game.LedSprite.setY": "設定原件的「y」位置",
  "game.LedSprite.setY|param|y": "TODO",
  "game.LedSprite.set|param|property": "要變更的特性名稱",
  "game.LedSprite.turn": "將角色轉向",
  "game.LedSprite.turnLeft": "向左轉 （逆時針方向）",
  "game.LedSprite.turnLeft|param|degrees": "TODO",
  "game.LedSprite.turnRight": "向右轉 （順時針方向）",
  "game.LedSprite.turnRight|param|degrees": "TODO",
  "game.LedSprite.turn|param|degrees": "要轉動的角度，如：45、90、180、135",
  "game.LedSprite.turn|param|direction": "左或右",
  "game.LedSprite.x": "回報角色在 LED 螢幕上的「x」位置",
  "game.LedSprite.y": "回報角色在 LED 螢幕上的「y」位置",
  "game.addLife": "",
  "game.addLife|param|lives": "TODO",
  "game.addScore": "在目前的得分上增加或減少指定的分數。",
  "game.addScore|param|points": "要改變（增加或減少）的分數，例如 1",
  "game.createSprite": "創建一個新的 LED 角色，指向右方。",
  "game.createSprite|param|x": "角色的水平座標，例如 2。",
  "game.createSprite|param|y": "角色的垂直座標，例如 2。",
  "game.currentTime": "",
  "game.gameOver": "顯示遊戲結束動畫與分數。",
  "game.invalidSprite": "",
  "game.isGameOver": "",
  "game.isPaused": "指定是否暫停遊戲轉譯以播放其他動畫",
  "game.isRunning": "",
  "game.level": "取得目前的等級值",
  "game.levelUp": "",
  "game.life": "取得目前的生命值",
  "game.pause": "暫停遊戲轉譯引擎以播放其他動畫",
  "game.removeLife": "",
  "game.removeLife|param|life": "TODO",
  "game.resume": "繼續遊戲轉譯引擎",
  "game.score": "取得目前的得分值",
  "game.setLife": "設置目前的生命數。",
  "game.setLife|param|value": "TODO",
  "game.setScore": "將目前的得分設定成指定的數字。",
  "game.setScore|param|value": "新分數值。",
  "game.showScore": "在屏幕上顯示分數。",
  "game.startCountdown": "啟動遊戲的倒數計時器，時間可自訂，單位為 ms（毫秒，1 秒 = 1000 毫秒）。",
  "game.startCountdown|param|ms": "要倒數的起始值，單位為毫秒。",
  "game.startStopwatch": "",
  "images": "創建、操作並呈現出一個 LED 構成的圖像。",
  "images.createBigImage": "創建一個在 LED 屏幕上顯示的大型圖像，大型的圖像會用到 2 個框 。",
  "images.createImage": "創建一個在 LED 屏幕上顯示的圖像。",
  "input": "來自傳感器的事件和數據",
  "input.acceleration": "透過加速度感測器（G-sensor）取得的值，單位是 mg。重力感測器可以提供速度和位移的資訊，舉例來說，當主控板平放且螢幕朝上時，X、Y、Z 軸上得到的數值會是 0、0、-1024。",
  "input.acceleration|param|dimension": "TODO",
  "input.buttonIsPressed": "取得按鈕目前的狀態（是否被按下），若被按下則返回 true，否則返回 false。",
  "input.buttonIsPressed|param|button": "查詢要求的按鈕，例如：Button.A",
  "input.calibrate": "已過時，請改用 input.calibrateCompass",
  "input.calibrateCompass": "已過時，現在的校準是自動的了。",
  "input.compassHeading": "取得裝置目前朝向的方位角，單位是度。",
  "input.lightLevel": "讀取在 LED 屏幕上的光線亮度，範圍為從 0（最暗）到 255（最亮）。",
  "input.magneticForce": "透過磁力傳感器（M-sensor）取得的值，包含了 x、y、z 三軸的環境磁場強度資料。單位是 micro-Tesla，用 µT 表示。",
  "input.magneticForce|param|dimension": "TODO",
  "input.onButtonPressed": "當按下指定的按鍵（A 鍵、B 鍵、A+B 鍵）時運行其中的程式。",
  "input.onButtonPressed|param|body": "事件發生時要運行的程式",
  "input.onButtonPressed|param|button": "要按下的按鈕",
  "input.onGesture": "當做一些動作時（例如搖動裝置）執行其中的程式。",
  "input.onGesture|param|body": "動作發生時要運行的程式",
  "input.onGesture|param|gesture": "要追蹤的手勢類型，例如：Gesture.Shake",
  "input.onLogoDown": "在標誌朝下且板子豎直時要運行的程式。",
  "input.onLogoDown|param|body": "TODO",
  "input.onLogoUp": "附加程式碼，在標誌朝上且板子豎直時執行。",
  "input.onLogoUp|param|body": "TODO",
  "input.onPinPressed": "當指定的引腳（pin）被按下時執行其中的程式。",
  "input.onPinPressed|param|body": "壓下腳位時要運行的程式",
  "input.onPinPressed|param|name": "要壓下的腳位，例如：TouchPin.P0",
  "input.onPinReleased": "當指定的腳位（pin）被放開時執行其中的程式。",
  "input.onPinReleased|param|body": "放開腳位時要運行的程式",
  "input.onPinReleased|param|name": "要放開的腳位，例如：TouchPin.P0",
  "input.onScreenDown": "附加程式碼，在螢幕朝下時執行。",
  "input.onScreenDown|param|body": "TODO",
  "input.onScreenUp": "附加程式碼，在螢幕朝上時執行。",
  "input.onScreenUp|param|body": "TODO",
  "input.onShake": "在裝置搖動時要運行的程式。",
  "input.onShake|param|body": "TODO",
  "input.pinIsPressed": "取得引腳目前的狀態（是否被按下），若被按下則返回 true，否則返回 false。注意按下某個腳位的同時要按著接地腳位（GND）才會形成通路。",
  "input.pinIsPressed|param|name": "用來偵測碰觸的腳位，例如：TouchPin.P0",
  "input.rotation": "透過旋轉向量傳感器（RV-sensor）得到的值，旋轉向量代表設備的方向，是一個將 X 座標軸、Y 座標軸和角度混合計算得到的資料。你可以選擇返回 pitch（x 軸和水平面的夾角）或是 roll（y 軸和水平面的夾角）。",
  "input.rotation|param|kind": "TODO",
  "input.runningTime": "取得自裝置開機啟動至目前為止持續的時間，單位是 ms（毫秒）。",
  "input.runningTimeMicros": "取得上次開機以來經過的毫秒數。",
  "input.setAccelerometerRange": "設置重力加速度計樣本範圍。",
  "input.setAccelerometerRange|param|range": "描述所測得最大力量的數值",
  "input.temperature": "取得裝置周圍目前的溫度，單位是攝氏溫度 (°C)。",
  "led": "LED 屏幕的控制。",
  "led.brightness": "取得屏幕的亮度，值為 0（關閉）到 255（最亮）。",
  "led.displayMode": "取得目前顯示模式",
  "led.enable": "停用或啟用所有的 LED（或是理解為一個屏幕），若為 true 表示開啟，false 表示關閉。",
  "led.fadeIn": "在屏幕上淡入顯示。",
  "led.fadeIn|param|ms": "TODO",
  "led.fadeOut": "在屏幕上淡出。",
  "led.fadeOut|param|ms": "TODO",
  "led.plot": "開啟指定位置的 LED，位置用 x,y 座標的方式來指定（x 是橫向軸、y 是直向軸），例如 x:0 y:0 指的是最左上方的 LED。",
  "led.plotAll": "開啟所有 LED",
  "led.plotBarGraph": "根據顯示值（value）和最大值（high）繪製出垂直長條圖，若「最大值」為 0，則會自動調整圖表。",
  "led.plotBarGraph|param|high": "最大值。若為 0，會自動調整最大值，例如：0",
  "led.plotBarGraph|param|value": "要點亮的值",
  "led.plotBrightness": "開啟指定位置的 LED 並指定其亮度，位置用 x,y 座標的方式來指定（x 是橫向軸、y 是直向軸），例如 x:0 y:0 指的是最左上方的 LED。",
  "led.plotBrightness|param|brightness": "亮度值，範圍為 0（關閉）到 255（最亮）",
  "led.plotBrightness|param|x": "從 0 開始的 LED 水平座標",
  "led.plotBrightness|param|y": "從 0 開始的 LED 垂直座標",
  "led.plot|param|x": "從 0 開始的 LED 水平座標",
  "led.plot|param|y": "從 0 開始的 LED 垂直座標",
  "led.point": "獲取指定位置的 LED 是點亮還是未點亮的狀態，位置用座標軸方式定義，(0,0) 是左上角。",
  "led.point|param|x": "TODO",
  "led.point|param|y": "TODO",
  "led.screenshot": "拍攝 LED 畫面的螢幕截圖並傳回影像。",
  "led.setBrightness": "設定 LED 亮度（就是屏幕亮度），範圍為 0（關閉）到 255（最亮）。",
  "led.setBrightness|param|value": "亮度值，如：255、127、0",
  "led.setDisplayMode": "設定黑白之間與灰階的亮度值，以轉譯 LED。",
  "led.setDisplayMode|param|mode": "螢幕操作的顯示模式",
  "led.stopAnimation": "取消目前動畫並清除其他擱置中的動畫。",
  "led.toggle": "將指定位置的 LED 切換，例如本來是點亮的，切換成不點亮。",
  "led.toggleAll": "反轉目前的 LED 顯示",
  "led.toggle|param|x": "TODO",
  "led.toggle|param|y": "TODO",
  "led.unplot": "關閉指定位置的 LED，位置用 x,y 座標的方式來指定（x 是橫向軸、y 是直向軸），例如 x:0 y:0 指的是最左上方的 LED。",
  "led.unplot|param|x": "TODO",
  "led.unplot|param|y": "TODO",
  "msgpack.packNumberArray": "",
  "msgpack.packNumberArray|param|nums": "",
  "msgpack.unpackNumberArray": "",
  "music": "產生音階。",
  "music.beat": "返回一個節拍的持續時間，單位為 ms（毫秒，1 秒 = 1000 毫秒）。",
  "music.beginMelody": "播放一段指定的旋律，並指定重複播放的次數。格式為 NOTE[octave][:duration]",
  "music.beginMelody|param|melodyArray": "",
  "music.beginMelody|param|options": "旋律選項，單次 / 永遠，前景 / 背景",
  "music.builtInMelody": "取得內建旋律的旋律陣列。",
  "music.changeTempoBy": "將演奏的速度增加（或減少）所指定的數值。",
  "music.changeTempoBy|param|bpm": "要增加或減少的每分鐘節拍數，例如：20",
  "music.noteFrequency": "獲取一個音階的頻率。",
  "music.noteFrequency|param|name": "",
  "music.onEvent": "當指定的事件發生時執行其中的程式。",
  "music.playTone": "演奏一個音階，音階的輸入可以通過琴鍵或是直接輸入；同時可以指定要演奏的拍數（長度）。",
  "music.playTone|param|frequency": "",
  "music.playTone|param|ms": "音調的持續時間，單位為毫秒。",
  "music.rest": "暫停演奏指定的時間，相當於休止符；可以指定休息的拍數。",
  "music.rest|param|ms": "休止的持續時間，單位為毫秒。",
  "music.ringTone": "演奏一個音階，音階的輸入可以通過琴鍵或是直接輸入。",
  "music.ringTone|param|frequency": "",
  "music.setPlayTone": "設定自訂 playTone 功能以播放旋律",
  "music.setTempo": "將演奏的速度設定成所指定的數值。",
  "music.setTempo|param|bpm": "新的每分鐘拍數，例如：120",
  "music.tempo": "返回音效每分鐘的拍數（bpm = beats per minute），數值愈大，表示演奏速度愈快。",
  "parseFloat": "把一個字串轉換成數字。",
  "parseInt": "把一個字串轉換成整數",
  "pins": "",
  "pins.P0": "引腳 P0",
  "pins.P1": "引腳 P1",
  "pins.P10": "引腳 P10",
  "pins.P11": "引腳 P3",
  "pins.P12": "引腳 P12",
  "pins.P13": "引腳 P13",
  "pins.P14": "引腳 P14",
  "pins.P15": "引腳 P15",
  "pins.P16": "引腳 P16",
  "pins.P19": "引腳 P19",
  "pins.P2": "引腳 P2",
  "pins.P20": "引腳 P19",
  "pins.P3": "引腳 P3",
  "pins.P4": "",
  "pins.P5": "",
  "pins.P6": "",
  "pins.P7": "",
  "pins.P8": "",
  "pins.P9": "",
  "pins.analogPitch": "發出「脈衝寬度調變 (PWM)」訊號給目前的音高腳位。使用「analog set pitch pin」定義音高腳位。",
  "pins.analogPitch|param|frequency": "要調變的頻率，單位為赫茲（Hz）。",
  "pins.analogPitch|param|ms": "音高的持續時間，單位為毫秒。",
  "pins.analogReadPin": "讀取接點的值，格式為類比信號（值介於 0 至 1023）。",
  "pins.analogReadPin|param|name": "要寫入的腳位，例如：AnalogPin.P0",
  "pins.analogSetPeriod": "配置類比輸出的 PWM（Pulse-width modulation，脈衝寬度調變），單位為「微秒」，相當於千分之一毫秒。如果沒有將此腳位配置成類比輸出（使用「類比信號寫入」），這個操作不會生效。",
  "pins.analogSetPeriod|param|micros": "以微秒為單位的期間，如：20000",
  "pins.analogSetPeriod|param|name": "要設定期間的類比腳位，例如：AnalogPin.P0",
  "pins.analogSetPitchPin": "設定使用「類比音高」或音樂時要使用的腳位。",
  "pins.analogSetPitchPin|param|name": "要調變音高的來源腳位",
  "pins.analogWritePin": "設定接點的值，格式為類比信號（值介於 0 至 1023）。",
  "pins.analogWritePin|param|name": "要寫入的腳位名稱，例如：AnalogPin.P0",
  "pins.analogWritePin|param|value": "要寫入腳位的數值，介於「0」到「1023」之間，如：1023,0",
  "pins.createBuffer": "",
  "pins.createBufferFromArray": "",
  "pins.createBufferFromArray|param|bytes": "",
  "pins.createBuffer|param|size": "",
  "pins.digitalReadPin": "讀取指定腳位或是其它接點的的訊息，格式為數位信號（0 和 1）",
  "pins.digitalReadPin|param|name": "要讀取的腳位，例如：DigitalPin.P0",
  "pins.digitalWritePin": "設定腳位或是其它接點的值，格式為數位信號（0 和 1）。",
  "pins.digitalWritePin|param|name": "要寫入的腳位，例如：DigitalPin.P0",
  "pins.digitalWritePin|param|value": "要設定在腳位 1 上的值，如 0",
  "pins.i2cReadBuffer": "",
  "pins.i2cReadNumber": "從 7-bit I2C 位址讀取一個數字。",
  "pins.i2cWriteBuffer": "",
  "pins.i2cWriteNumber": "將一個數字寫入 7-bit I2C 位址。",
  "pins.map": "將某數字從某範圍重新對應到另一個範圍。也就是「from low」的值會對應到「to low」，「from high」的值會對應到「to high」，介於其中的值會對應到介於其中的值等等。",
  "pins.map|param|fromHigh": "值目前範圍的上限，例如：1023",
  "pins.map|param|fromLow": "值目前範圍的下限",
  "pins.map|param|toHigh": "值目標範圍的上限，例如：4",
  "pins.map|param|toLow": "值目標範圍的下限",
  "pins.map|param|value": "要在範圍內對應的值",
  "pins.onPulsed": "將此腳位設定至數位輸入，並在時間戳記位於此腳位為「high」或「low」的期間內產生事件。",
  "pins.onPulsed|param|name": "要註冊的數位腳位，例如：DigitalPin.P0",
  "pins.onPulsed|param|pulse": "脈衝的值，例如：PulseValue.High",
  "pins.pulseDuration": "取得最近脈衝期間的微秒數。此功能應從「onPulsed」處理常式呼叫。",
  "pins.pulseIn": "",
  "pins.pulseIn|param|name": "測量脈衝的腳位，例如：DigitalPin.P0",
  "pins.pulseIn|param|value": "脈衝的值，例如：PulseValue.High",
  "pins.servoSetPulse": "將此 IO 腳位設為類比/pwm 輸出、將期間設定為 20 ms，並根據指定的「微秒」或「1/1000」毫秒值設定脈衝寬度。",
  "pins.servoSetPulse|param|micros": "脈衝的持續時間，單位為微秒，例如 1500",
  "pins.servoSetPulse|param|name": "腳位名稱",
  "pins.servoWritePin": "將某值寫入伺服，據此控制軸。在標準伺服上，這樣會設定軸的角度 (單位為度)，將軸移往該方向。在連續旋轉伺服上，這樣會設定軸的速度 (「0」表示某方向的全速，「180」表示另一個方向的全速，接近「90」的數值表示無運動)。",
  "pins.servoWritePin|param|name": "要寫入的腳位，例如：AnalogPin.P0",
  "pins.servoWritePin|param|value": "角度或旋轉速度，如：180、90、0",
  "pins.setEvents": "配置由這個腳位引發的事件，事件可以使用 ``control.onEvent()`` 來訂定。",
  "pins.setEvents|param|name": "要開啟事件模式的腳位，例如 DigitalPin.P0",
  "pins.setEvents|param|type": "此腳位要發送的事件類型，例如：PinEventType.Edge",
  "pins.setPull": "配置這個腳位要推送（pull）的時機。",
  "pins.setPull|param|name": "要開啟推送模式的腳位，例如 DigitalPin.P0",
  "pins.setPull|param|pull": "mbed 提取組態之一，例如：PinPullMode.PullUp",
  "pins.sizeOf": "",
  "pins.spiFormat": "設定 SPI 位元與模式",
  "pins.spiFormat|param|bits": "位元數，例如：8",
  "pins.spiFormat|param|mode": "模式，例如：3",
  "pins.spiFrequency": "設定 SPI 頻率",
  "pins.spiFrequency|param|frequency": "時脈頻率，例如：1000000",
  "pins.spiPins": "設定 SPI 例項所用的 MOSI、MISO、SCK 腳位",
  "pins.spiWrite": "寫入 SPI 從屬並傳回回應",
  "pins.spiWrite|param|value": "要傳送到 SPI 從屬的資料",
  "serial": "透過序列連線讀取與寫入資料。",
  "serial.delimiters": "",
  "serial.onDataReceived": "註冊一個事件，當碰到所指定的分隔符號時觸發，然後執行其中的程式。",
  "serial.onDataReceived|param|delimiters": "要與所收到字元比對的字元。",
  "serial.readBuffer": "從接收緩衝讀取多重字元，並填入使用者緩衝。",
  "serial.readBuffer|param|length": "預設緩衝長度，例如：64",
  "serial.readLine": "從串列（serial）裡讀取一行文字，意思是，當讀取過程中碰到換行字符就停止讀取。",
  "serial.readString": "讀取串列中緩衝接收到的字串資料",
  "serial.readUntil": "讀取串列（serial）裡的文字，當碰到指定的符號時就返回串流。",
  "serial.readUntil|param|delimiter": "用來分隔各文字區塊的分隔符號",
  "serial.redirect": "動態配置串列的發送和接收腳位，還有自訂發送速率（TX）、接收速率（RX）。",
  "serial.redirectToUSB": "導向序列輸入與輸出以使用 USB 連線。",
  "serial.redirect|param|rate": "新傳送速率。例如：115200",
  "serial.redirect|param|rx": "新接收腳位，例如：SerialPin.P1",
  "serial.redirect|param|tx": "新傳輸腳位，例如：SerialPin.P0",
  "serial.writeBuffer": "透過序列連線傳送緩衝",
  "serial.writeLine": "輸出一行指定的字串到串列（serial）裡",
  "serial.writeNumber": "輸出一個指定的數字到串列（serial）裡",
  "serial.writeNumbers": "",
  "serial.writeString": "發送字串到串列（serial）裡。",
  "serial.writeValue": "寫入一個鍵值對（格式為 name:value）到串列（serial）裡。",
  "serial.writeValue|param|name": "數值串流的名稱，例如：x",
  "serial.writeValue|param|value": "要寫入的值"
}