{
  "pxt.json": "{\n    \"name\": \"TM1650\",\n    \"version\": \"1.1.0\",\n    \"description\": \"makecode TM1650 （4 位数码管显示） 的 microbit 软件包\",\n    \"license\": \"MIT\",\n    \"dependencies\": {\n        \"core\": \"*\"\n    },\n    \"files\": [\n        \"README.md\",\n        \"main.ts\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"public\": true\n}",
  "README.md": "# 4 位数码管显示模块 (TM1650)\nmakecode 4 位数码管显示 (TM1650) 的 microbit 软件包  \n\n4 位数码管显示是由 4 个 7 段 LED 数码管组成，可以显示数字、时间、日期等。这个软件包支持使用了 I2C 接口的 TM1650 芯片。  \n\n作者: shaoziyang  \n日期: 2018年3月  \n\n![](https://raw.githubusercontent.com/microbit-makecode-packages/TM1650_cn/master/icon.png)  \n\n## 使用方法\n\n打开 makecode 编辑器，在项目中选择添加软件包，然后在地址栏输入下面网址  \n\nhttps://github.com/microbit-makecode-packages/TM1650_cn  \n\n搜索后就可以添加并使用本软件包了。  \n\n![](https://raw.githubusercontent.com/microbit-makecode-packages/TM1650_cn/master/4-LED.jpg)\n\n## API\n\n- **on()**  \n打开显示功能。  \n\n- **off()**  \n关闭显示功能（不会影响显示内容）。  \n\n- **clear()**  \n清除显示的内容。  \n\n- **digit(num: number, bit: number)**  \n在指定位置显示一个数字，数字的范围是 0-15。  \n\n- **showNumber(num: number)**  \n显示一个整数，可以是负数。  \n\n- **showHex(num: number)**  \n以16进制方式显示整数。  \n\n- **showDpAt(bit: number, show: boolean)**  \n显示或隐藏小数点  \nbit 代表小数点的位置, [0 - 3]  \nshow, 代表显示或隐藏, true时显示，false时隐藏  \n\n- **setIntensity(dat: number)**  \n设置显示亮度。  \ndat 代表亮度，范围是 0 - 8，0代表关闭，8代表最亮。  \n\n## 演示\n\n![](https://raw.githubusercontent.com/microbit-makecode-packages/TM1650_cn/master/demo.jpg)\n\n## 授权方式  \n\nMIT\n\nmicrobit/micropython 中文社区版权所有 (c) 2018  \n\n## 支持硬件\n\n* for PXT/microbit\n\n\n[来自 microbit/micropython 中文社区](http://www.micropython.org.cn) ",
  "main.ts": "/**\n * makecode Four Digit Display (TM1650) Package.\n * From microbit/micropython Chinese community.\n * http://www.micropython.org.cn\n */\n\n/**\n * TM1650 数码管模块\n */\n//% weight=100 color=#64C800 icon=\"8\" block=\"TM1650\"\nnamespace TM1650 {\n\n    let COMMAND_I2C_ADDRESS = 0x24\n    let DISPLAY_I2C_ADDRESS = 0x34\n    let _SEG = [0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71];\n\n    let _intensity = 3\n    let dbuf = [0, 0, 0, 0]\n\n    /**\n     * send command to display\n     * @param is command, eg: 0\n     */\n    function cmd(c: number) {\n        pins.i2cWriteNumber(COMMAND_I2C_ADDRESS, c, NumberFormat.Int8BE)\n    }\n\n    /**\n     * send data to display\n     * @param is data, eg: 0\n     */\n    function dat(bit: number, d: number) {\n        pins.i2cWriteNumber(DISPLAY_I2C_ADDRESS + (bit % 4), d, NumberFormat.Int8BE)\n    }\n\n    /**\n     * turn on display\n     */\n    //% blockId=\"TM650_ON\" block=\"打开\"\n    //% weight=50 blockGap=8\n    export function on() {\n        cmd(_intensity * 16 + 1)\n    }\n\n    /**\n     * turn off display\n     */\n    //% blockId=\"TM650_OFF\" block=\"关闭\"\n    //% weight=50 blockGap=8\n    export function off() {\n        _intensity = 0\n        cmd(0)\n    }\n\n    /**\n     * clear display content\n     */\n    //% blockId=\"TM650_CLEAR\" block=\"清除\"\n    //% weight=40 blockGap=8\n    export function clear() {\n        dat(0, 0)\n        dat(1, 0)\n        dat(2, 0)\n        dat(3, 0)\n        dbuf = [0, 0, 0, 0]\n    }\n\n    /**\n     * show a digital in given position\n     * @param digit is number (0-15) will be shown, eg: 1\n     * @param bit is position, eg: 0\n     */\n    //% blockId=\"TM650_DIGIT\" block=\"显示数 %num|在 %bit\"\n    //% weight=80 blockGap=8\n    //% num.max=15 num.min=0\n    export function digit(num: number, bit: number) {\n        dbuf[bit % 4] = _SEG[num % 16]\n        dat(bit, _SEG[num % 16])\n    }\n\n    /**\n     * show a number in display\n     * @param num is number will be shown, eg: 100\n     */\n    //% blockId=\"TM650_SHOW_NUMBER\" block=\"显示整数 %num\"\n    //% weight=100 blockGap=8\n    export function showNumber(num: number) {\n        if (num < 0) {\n            dat(0, 0x40) // '-'\n            num = -num\n        }\n        else\n            digit((num / 1000) % 10, 0)\n        digit(num % 10, 3)\n        digit((num / 10) % 10, 2)\n        digit((num / 100) % 10, 1)\n    }\n\n    /**\n     * show a number in hex format\n     * @param num is number will be shown, eg: 123\n     */\n    //% blockId=\"TM650_SHOW_HEX_NUMBER\" block=\"显示16进制整数 %num\"\n    //% weight=90 blockGap=8\n    export function ShowHex(num: number) {\n        if (num < 0) {\n            dat(0, 0x40) // '-'\n            num = -num\n        }\n        else\n            digit((num >> 12) % 16, 0)\n        digit(num % 16, 3)\n        digit((num >> 4) % 16, 2)\n        digit((num >> 8) % 16, 1)\n    }\n\n    /**\n     * show Dot Point in given position\n     * @param bit is positiion, eg: 0\n     * @param show is true/false, eg: true\n     */\n    //% blockId=\"TM650_SHOW_DP\" block=\"显示小数点 %bit|显示 %num\"\n    //% weight=80 blockGap=8\n    export function showDpAt(bit: number, show: boolean) {\n        if (show) dat(bit, dbuf[bit % 4] | 0x80)\n        else dat(bit, dbuf[bit % 4] & 0x7F)\n    }\n\n    /**\n     * set display intensity\n     * @param dat is intensity of the display, eg: 3\n     */\n    //% blockId=\"TM650_INTENSITY\" block=\"设置亮度 %dat\"\n    //% weight=70 blockGap=8\n    export function setIntensity(dat: number) {\n        if ((dat < 0) || (dat > 8))\n            return;\n        if (dat == 0)\n            off()\n        else {\n            _intensity = dat\n            cmd((dat << 4) | 0x01)\n        }\n    }\n\n    on();\n}\n",
  "test.ts": "let item = 0\nitem = 0\nbasic.forever(() => {\n    TM1650.showNumber(item)\n    item += 1\n    basic.pause(1000)\n})\n"
}